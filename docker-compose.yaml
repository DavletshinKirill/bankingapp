version: '3'

volumes:
  db-data:
    driver: local
  grafana-data:
    driver: local
  prometheus-data:
    driver: local

networks:
  app:
    driver: bridge

services:
  postgres:
    image: 'postgres:16'
    container_name: 'bankingApp-postgres'
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app

  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}
    networks:
      - app

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
    networks:
      - app

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - app

  grafana:
    image: grafana/grafana:10.2.4
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - app

  calculator:
    image: kirilldavletshin/calculator:latest
    ports:
      - "8081:8081"
    networks:
      - app
    env_file:
      - .env
    depends_on:
      - prometheus
      - grafana

  deal:
    build:
      dockerfile: deal.Dockerfile
    ports:
      - "8082:8082"
    networks:
      - app
    env_file:
      - .env
    depends_on:
      - postgres
      - kafka
      - calculator

  statement:
    image: kirilldavletshin/statement:latest
    ports:
      - "8083:8083"
    networks:
      - app
    env_file:
      - .env
    depends_on:
      - deal

  dossier:
    build:
      dockerfile: dossier.Dockerfile
    ports:
      - "8084:8084"
    networks:
      - app
    env_file:
      - .env
    depends_on:
      - deal
      - kafka

  gateway:
    image: kirilldavletshin/gateway:latest
    ports:
      - "8085:8085"
    networks:
      - app
    env_file:
      - .env
    depends_on:
      - deal
      - calculator
      - statement


